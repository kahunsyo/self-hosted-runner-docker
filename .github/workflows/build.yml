name: Build and push runner image

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'image/**'
  push:
    branches:
      - main
    paths:
      - 'image/**'

defaults:
  run:
    working-directory: images

jobs:
  build-and-push:
    runs-on: [self-hosted, linux, X64]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix: # Cross of matrix[1], matrix[2], ...
        context:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-20.04
        arch:
          - platform: linux/amd64
            arch: amd64
          - platform: linux/arm64
            arch: arm64
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate custom image tag
        id: custom_tag
        shell: bash
        run: echo "tag=${GITHUB_REF_NAME}-${GITHUB_WORKFLOW_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Generate metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
            images:  ghcr.io/${{ matrix.context }}
            tags: |
                type=ref,event=branch
                type=ref,event=pr
                type=raw,value=${{ steps.custom_tag.outputs.tag }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          platforms: ${{ matrix.arch.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            TARGETARCH=${{ matrix.arch.arch }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ matrix.context }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
