name: Build and push runner image

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "image/**"
  push:
    branches:
      - main
    paths:
      - "image/**"

# Do not effect build context
# defaults:
#   run:
#     working-directory: ./images

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build-and-push:
    runs-on: [self-hosted, linux]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    strategy:
      matrix: # Cross of matrix[1], matrix[2], ...
        context:
          - ubuntu-latest
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate custom image tag
        id: custom_tag
        shell: bash
        run: |
          echo "tag-ref-context-commit=${GITHUB_REF_NAME}-${{matrix.context}}-${GITHUB_WORKFLOW_SHA:0:7}" >> $GITHUB_OUTPUT
          echo "tag-ref-context=${GITHUB_REF_NAME}-${{matrix.context}}" >> $GITHUB_OUTPUT

      - name: Generate metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}
          tags: |
            type=raw,value=${{ steps.custom_tag.outputs.tag-ref-context-commit }}
            type=raw,value=${{ steps.custom_tag.outputs.tag-ref-context }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./images/${{ matrix.context }}
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/cache:${{ matrix.context }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/cache:${{ matrix.context }},mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
